name: FastAPI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          cd ExpenseTracker
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          cd ExpenseTracker
          pytest test_main.py

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          cd ExpenseTracker
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      # Step 5: Verify Pushed Image (Optional)
      - name: Verify DockerHub Push
        run: |
          echo "Verifying the Docker image exists on DockerHub..."
          curl -fsSL https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/fastapi-app/tags/ | jq .


  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Deploy to Server (Placeholder)
        run: |
          echo "Deploying the application..."
          # Add deployment commands here (e.g., SSH to the server, or use a cloud provider CLI)
